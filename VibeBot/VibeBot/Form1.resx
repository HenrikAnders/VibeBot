<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="load.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TRWo6B5XPREAOw==
</value>
  </data>
</root>